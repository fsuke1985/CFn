AWSTemplateFormatVersion: 2010-09-09
Description: create to AZ
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - 
        Label: 
          default: "Network Configuration"
        Parameters: 
          - VPCID
          - SubnetId
          - SecurityGroupID
    ParameterLabels: 
      VPCID: 
        default: "Which VPC should this be deployed to?"

Parameters: 
  SubnetPublicCidrBlock:
    Type: String
    Default: ''
  SubnetPrivateCidrBlock:
    Type: String
    Default: ''
  VpcCidr:
    Type: String
    Default: ''
#Mappings: 

#Conditions: 

Resources: 
  # Create to VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      Tags:
        - Key: Name
          Value: "test vpc"
  # Subnet public
  SubnetPublic:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref SubnetPublicCidrBlock
      AvailabilityZone: "ap-northeast-1d"
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: "Subnet"
  # Subnet private
  SubnetPrivate:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref SubnetPrivateCidrBlock
      AvailabilityZone: "ap-northeast-1a"
      VpcId: !Ref VPC

  
  
  #
  # Routing
  #

  # Public_1
  PublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-public-route-table

  InternetGatewayRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicSubnetRouteTable
      SubnetId: !Ref SubnetPublic
  
  
  # Private_1
  PrivateSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-private-route-table

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPrivate
      RouteTableId: !Ref PrivateSubnetRouteTable

  #
  # Internet Gateway
  #

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-internet-gateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  #
  # NAT Gateway
  #

  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    DependsOn: VPCGatewayAttachment

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIP.AllocationId
      SubnetId: !Ref SubnetPublic
    DependsOn: VPCGatewayAttachment

  NATGatewayRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

#Outputs: